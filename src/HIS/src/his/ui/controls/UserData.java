/*
    Copyright 2011 Silvio Wehner, Franziska Staake, Thomas Schulze
  
    This file is part of HIS.

    HIS is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    HIS is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with HIS.  If not, see <http://www.gnu.org/licenses/>.
 
 */
package his.ui.controls;

import his.business.UserDataBusiness;
import his.model.Groups;
import his.model.Users;
import his.model.providers.GroupsProvider;
import his.model.providers.UsersProvider;
import his.ui.NotEditableDefaultTableModel;
import his.ui.validations.NotEmptyValidator;
import java.util.ArrayList;
import java.util.Collection;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

/**
 *
 * @author Franziska Staake
 */
public class UserData extends javax.swing.JPanel {
    
    private UserDataBusiness userDataB = new UserDataBusiness();
    private UsersProvider uProvider = new UsersProvider();
    private NotEditableDefaultTableModel defaultTableModel = new NotEditableDefaultTableModel();
    //user := aktuell sich in Bearbeitung befindlicher Benutzer
    private Users user = new Users();
    private String UserName = new String();

    /** Creates new form UserData */
    public UserData() {
        initComponents();
        tableModelLoad();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        btnPasswordReset = new javax.swing.JButton();
        btnChange = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listGroups = new javax.swing.JTable();
        txtUserName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        jLabel1.setText("Vorname");

        txtFirstName.setInputVerifier(new NotEmptyValidator(null, txtFirstName, "Bitte Vornamen eintragen"));

        jLabel2.setText("Nachname");

        txtName.setInputVerifier(new NotEmptyValidator(null, txtName, "Bitte Nachnamen eintragen"));

        btnPasswordReset.setText("Passwort zurücksetzen");
        btnPasswordReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPasswordResetActionPerformed(evt);
            }
        });

        btnChange.setText("Ändern");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        jLabel3.setText("Gruppen");

        btnDelete.setText("Löschen");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        listGroups.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(listGroups);

        txtUserName.setInputVerifier(new NotEmptyValidator(null, txtUserName, "Bitte Benutzernamen eintragen"));

        jLabel7.setText("Benutzername");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7)
                    .addComponent(txtUserName)
                    .addComponent(txtName)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(btnPasswordReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnChange)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(btnPasswordReset))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnChange))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private boolean isDataValid() {
        boolean isDataValid = true;
        isDataValid = this.txtFirstName.getInputVerifier().verify(txtFirstName);
        isDataValid = this.txtName.getInputVerifier().verify(txtName) && isDataValid;
        isDataValid = this.txtUserName.getInputVerifier().verify(txtUserName) && isDataValid;
       return isDataValid;
    }  
    
    private void tableModelLoad(){
        // Tabelle mit Gruppen füllen
        //NotEditableDefaultTableModel model = new NotEditableDefaultTableModel();
        // Spalte erstellen
        
        defaultTableModel.addColumn("Gruppen");
       
        //alle Gruppen aus DB eintragen
        for(Groups group : (new GroupsProvider()).findAll()){
            defaultTableModel.addRow(new Groups[] {group});                       
        }
        
        //Tabellen-Modell der Tabelle zuweisen
        listGroups.setModel(defaultTableModel);
    }
    
       
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // Benutzer wird in der Datenbank als gelöscht markiert
        if(JOptionPane.showConfirmDialog(this,
                        "Wollen Sie den Benutzer \""+user.toString()+"\" wirklich löschen?",
                        "Benutzer löschen",
                        JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION)
                {
        user.setDeleted(true);
        uProvider.update(user);}
        
        //Felder leeren                
        txtFirstName.setText("");                
        txtName.setText("");                
        txtUserName.setText("");
        listGroups.removeRowSelectionInterval(0, 3);

        //labelStatus.setText("Benutzer erfolgreich angelegt");                
        JOptionPane.showMessageDialog(this, "Benutzer erfolgreich gelöscht");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        // Benutzerdaten werden geändert
        int selectedItemsNumber = listGroups.getSelectedRowCount();
        Collection<Groups> groupsCol = new ArrayList<>();
        TableModel tableModel = listGroups.getModel();
        
        if(!txtUserName.getText().equals(UserName)
                && uProvider.findByLogin(txtUserName.getText()) != null)
        {
            JOptionPane.showMessageDialog(this, "Dieser Benutzername wurde schon verwendet!");
            txtUserName.setText(UserName);
            return;
        }            
        
        //Felder dürfen nicht leer sein
        if(!isDataValid())
            return;
            
        if(selectedItemsNumber == 0){
            JOptionPane.showMessageDialog(this, "Bitte Gruppen auswählen!");
            return;
        }
            
        user.setFirstName(txtFirstName.getText());
        user.setLastName(txtName.getText());
        user.setLogin(txtUserName.getText());

        /*Benutzergruppen: selektierte Felder in Tabelle herauslesen
        und Groups-Collection hinzufügen*/
        int[] selectedItems = listGroups.getSelectedRows();
        for(int selection : selectedItems){
            Groups group = (Groups)tableModel.getValueAt(selection, 0);
            groupsCol.add(group);                    
        }

        user.setGroupsCollection(groupsCol);
        uProvider.update(user);

        JOptionPane.showMessageDialog(this, "Benutzer erfolgreich geändert");         
        
        
    }//GEN-LAST:event_btnChangeActionPerformed

    private void btnPasswordResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPasswordResetActionPerformed
        //Passwort des zu bearbeitenden Benutzers in Standard-PW ändern
        user.setPassword("p@ssw0rd");        
        uProvider.update(user);
        //userDataB.saveUserData();
    }//GEN-LAST:event_btnPasswordResetActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnPasswordReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listGroups;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables

    public void setSelectedUser(Users selectedUser) {
        //txtAdminName.setText(selectedUser.getCreatedFrom()); 
        //txtCreationDate.setText(selectedUser.get);
        user = selectedUser;
        txtFirstName.setText(user.getFirstName());
        txtName.setText(user.getLastName());
        txtUserName.setText(user.getLogin());
        listGroups.removeRowSelectionInterval(0, 3);
        UserName = txtUserName.getText();
                
        for(Groups group : user.getGroupsCollection()){
            for(int i = 0; i < 4; i++){
               if(group.equals(defaultTableModel.getValueAt(i, 0))){
                   listGroups.setRowSelectionInterval(i, i);
               }
            }
        }
        
        
        
             
    }
    
    
}
