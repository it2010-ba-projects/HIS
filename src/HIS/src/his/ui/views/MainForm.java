/*
    Copyright 2011 Silvio Wehner, Franziska Staake, Thomas Schulze
  
    This file is part of HIS.

    HIS is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    HIS is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with HIS.  If not, see <http://www.gnu.org/licenses/>.
 
 */
package his.ui.views;

import his.business.security.Rights;
import his.business.security.RightsManager;
import his.ui.controls.CategoryData;
import his.ui.controls.CategoryResult;
import his.ui.controls.CategorySearch;
import his.ui.controls.HardwareData;
import his.ui.controls.HardwareResult;
import his.ui.controls.HardwareSearch;
import his.ui.controls.UserData;
import his.ui.controls.UserResult;
import his.ui.controls.UserSearch;
import his.ui.events.CategoriesResultShowEvent;
import his.ui.events.CategoriesResultShowListener;
import his.ui.events.SearchEvent;
import his.ui.events.SearchListener;
import his.ui.events.ResultShowEvent;
import his.ui.events.ResultShowListener;
import his.ui.events.CreateCategoriesEvent;
import his.ui.events.CreateCategoriesListener;
import javax.swing.GroupLayout;
import javax.swing.JPanel;

/**
 *
 * @author Franziska Staake
 */
public class MainForm extends javax.swing.JFrame {

    /** Creates new form MainForm */
   private UserSearch userSearch = new UserSearch();
   private UserData userData = new UserData();
   private UserResult userResult = new UserResult();
   private HardwareSearch hardwareSearch = new HardwareSearch();
   private HardwareData hardwareData = new HardwareData();
   private HardwareResult hardwareResult = new HardwareResult();
   private CategorySearch categorySearch = new CategorySearch();
   private CategoryData categoryData = new CategoryData();
   private CategoryResult categoryResult = new CategoryResult();
    
    public MainForm() {
        initComponents();
        categoryData.setRefreshOnExpand(true);
        
        if(!RightsManager.hasRight(Rights.ADMINISTRATOR)){
            menuItemUsers.setVisible(false);
            menuItemMenuNewUser.setVisible(false);
        }
        
        categorySearch.addCategoriesSearchListener(new SearchListener() {
            @Override
            public void searchPerformed(SearchEvent evt) {
                categoryResult.setCatResultBusiness(categorySearch.getCatResultBusiness());
            }
        });
        
        categoryResult.addCategoriesResultShowListener(new CategoriesResultShowListener() {
            @Override
            public void categoriesResultShowPerformed(CategoriesResultShowEvent evt) {
                categoryData.setSelectedCategory(categoryResult.getSelectedCategory(), evt.refreshTree());
            }
        });
        
        userSearch.addUserSearchListener(new SearchListener() {
            @Override
            public void searchPerformed(SearchEvent evt) {
                userResult.setUserResultBusiness(userSearch.getUserResultBusiness());
            }
        });
        
        userResult.addUserResultShowListener(new ResultShowListener() {
            @Override
            public void resultShowPerformed(ResultShowEvent evt) {
                userData.setSelectedUser(userResult.getSelectedUser());
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelStatus = new javax.swing.JPanel();
        seperaterStatus = new javax.swing.JSeparator();
        progressBar = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        panelSearch = new javax.swing.JPanel();
        panelData = new javax.swing.JPanel();
        panelResults = new javax.swing.JPanel();
        btnQuickSearch = new javax.swing.JButton();
        txtSearchAttribute = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuMenu = new javax.swing.JMenu();
        menuItemHardware = new javax.swing.JMenuItem();
        menuItemUsers = new javax.swing.JMenuItem();
        menuItemCategories = new javax.swing.JMenuItem();
        menuItemNew = new javax.swing.JMenu();
        menuItemMenuNewUser = new javax.swing.JMenuItem();
        menuItemMenuNewHardware = new javax.swing.JMenuItem();
        menuItemMenuNewCategory = new javax.swing.JMenuItem();
        menuItemClose = new javax.swing.JMenuItem();
        menuPreferences = new javax.swing.JMenu();
        menuItemPasswordChange = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout panelStatusLayout = new javax.swing.GroupLayout(panelStatus);
        panelStatus.setLayout(panelStatusLayout);
        panelStatusLayout.setHorizontalGroup(
            panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 767, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(seperaterStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 957, Short.MAX_VALUE)
        );
        panelStatusLayout.setVerticalGroup(
            panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelStatusLayout.createSequentialGroup()
                .addComponent(seperaterStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelStatusLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel1)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelStatusLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))
                    .addGroup(panelStatusLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addContainerGap())))
        );

        panelSearch.setBorder(javax.swing.BorderFactory.createTitledBorder("Suche"));

        javax.swing.GroupLayout panelSearchLayout = new javax.swing.GroupLayout(panelSearch);
        panelSearch.setLayout(panelSearchLayout);
        panelSearchLayout.setHorizontalGroup(
            panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 163, Short.MAX_VALUE)
        );
        panelSearchLayout.setVerticalGroup(
            panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 184, Short.MAX_VALUE)
        );

        panelData.setBorder(javax.swing.BorderFactory.createTitledBorder("Auswertung"));

        javax.swing.GroupLayout panelDataLayout = new javax.swing.GroupLayout(panelData);
        panelData.setLayout(panelDataLayout);
        panelDataLayout.setHorizontalGroup(
            panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 764, Short.MAX_VALUE)
        );
        panelDataLayout.setVerticalGroup(
            panelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 184, Short.MAX_VALUE)
        );

        panelResults.setBorder(javax.swing.BorderFactory.createTitledBorder("Ergebnisse"));

        javax.swing.GroupLayout panelResultsLayout = new javax.swing.GroupLayout(panelResults);
        panelResults.setLayout(panelResultsLayout);
        panelResultsLayout.setHorizontalGroup(
            panelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 945, Short.MAX_VALUE)
        );
        panelResultsLayout.setVerticalGroup(
            panelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 311, Short.MAX_VALUE)
        );

        btnQuickSearch.setText("Suchen");

        txtSearchAttribute.setText("Schnellsuche");

        menuMenu.setText("Menü");

        menuItemHardware.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        menuItemHardware.setText("Hardwareverwaltung");
        menuItemHardware.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemHardwareActionPerformed(evt);
            }
        });
        menuMenu.add(menuItemHardware);

        menuItemUsers.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        menuItemUsers.setText("Benutzerverwaltung");
        menuItemUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUsersActionPerformed(evt);
            }
        });
        menuMenu.add(menuItemUsers);

        menuItemCategories.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, java.awt.event.InputEvent.CTRL_MASK));
        menuItemCategories.setText("Kategorieverwaltung");
        menuItemCategories.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCategoriesActionPerformed(evt);
            }
        });
        menuMenu.add(menuItemCategories);

        menuItemNew.setText("Neu");

        menuItemMenuNewUser.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        menuItemMenuNewUser.setText("Benutzer");
        menuItemMenuNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemMenuNewUserActionPerformed(evt);
            }
        });
        menuItemNew.add(menuItemMenuNewUser);

        menuItemMenuNewHardware.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        menuItemMenuNewHardware.setText("Hardwarekomponente");
        menuItemMenuNewHardware.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemMenuNewHardwareActionPerformed(evt);
            }
        });
        menuItemNew.add(menuItemMenuNewHardware);

        menuItemMenuNewCategory.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        menuItemMenuNewCategory.setText("Kategorie");
        menuItemMenuNewCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemMenuNewCategoryActionPerformed(evt);
            }
        });
        menuItemNew.add(menuItemMenuNewCategory);

        menuMenu.add(menuItemNew);

        menuItemClose.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        menuItemClose.setText("Beenden");
        menuItemClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCloseActionPerformed(evt);
            }
        });
        menuMenu.add(menuItemClose);

        jMenuBar1.add(menuMenu);

        menuPreferences.setText("Einstellungen");

        menuItemPasswordChange.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        menuItemPasswordChange.setText("Passwort ändern");
        menuItemPasswordChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemPasswordChangeActionPerformed(evt);
            }
        });
        menuPreferences.add(menuItemPasswordChange);

        jMenuBar1.add(menuPreferences);

        menuHelp.setText("Hilfe");
        jMenuBar1.add(menuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelResults, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(panelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(txtSearchAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnQuickSearch))
                            .addComponent(panelData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(panelStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnQuickSearch)
                    .addComponent(txtSearchAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*Laden der Controls (child) in die dafür vorgesehenen Panels (parent) */
    private void addComponentToPanel(JPanel parent, JPanel child){
        parent.removeAll();
        
        GroupLayout layout = new GroupLayout(parent);
        
        parent.setLayout(layout);
        
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(javax.swing.GroupLayout.Alignment.CENTER, layout.createSequentialGroup()
                .addComponent(child))
         );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(javax.swing.GroupLayout.Alignment.CENTER, layout.createSequentialGroup()
                .addComponent(child))
         );
        
        parent.validate();
        parent.repaint();
    }
    
    /*Array mit den zu ladenden Controls wird übergeben
      Controls (child) werden in die dafür vorgesehenen Panels geladen*/
    private void loadChildPanels(JPanel[] childs){
        addComponentToPanel(panelSearch, childs[0]);
        addComponentToPanel(panelData, childs[1]);
        addComponentToPanel(panelResults, childs[2]);
    }     
    
    /**Je nach Verwaltungsbereich wird das entsprechende Fenster zur Eingabe eines neuen 
      Datensatzes geöffnet*/
    private void menuItemHardwareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemHardwareActionPerformed
        //HardwarePanel anzeigen:
        loadChildPanels(new JPanel[] {hardwareSearch, hardwareData, hardwareResult} );
    }//GEN-LAST:event_menuItemHardwareActionPerformed

    private void menuItemUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUsersActionPerformed
        // UserPanel anzeigen:
        loadChildPanels(new JPanel[] {userSearch, userData, userResult} );
    }//GEN-LAST:event_menuItemUsersActionPerformed

    private void menuItemCategoriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCategoriesActionPerformed
        // KategoriePanel anzeigen:
        categoryData.setEditDeleteVisible(true);
        loadChildPanels(new JPanel[] {categorySearch, categoryData, categoryResult} );
    }//GEN-LAST:event_menuItemCategoriesActionPerformed

    private void menuItemCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCloseActionPerformed
        // Beenden über Menü:
        System.exit(0);
    }//GEN-LAST:event_menuItemCloseActionPerformed

    private void menuItemMenuNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemMenuNewUserActionPerformed
        //Fenster "neuen Benutzer anlegen" anzeigen
        NewUser newU = new NewUser(this,true);
        newU.setVisible(true);
    }//GEN-LAST:event_menuItemMenuNewUserActionPerformed

    private void menuItemMenuNewHardwareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemMenuNewHardwareActionPerformed
        //Fenster "neue Hardwarekomponente anlegen" anzeigen
        NewHardware newH = new NewHardware(this,true);
        newH.setVisible(true);
    }//GEN-LAST:event_menuItemMenuNewHardwareActionPerformed

    private void menuItemMenuNewCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemMenuNewCategoryActionPerformed
        //Fenster "neue Kategorie anlegen" anzeigen
        NewCategory newC = new NewCategory(this,true, categoryData.getExpandedRows());             
             newC.addCategoriesSearchListener(new CreateCategoriesListener() {
                @Override
                public void createCategoriesPerfomed(CreateCategoriesEvent evt) {
                    categoryData.refreshTree();
                    categoryData.setExpandedRows(evt.getExpandedRowsList());
                }
            });
            newC.setVisible(true);
    }//GEN-LAST:event_menuItemMenuNewCategoryActionPerformed

    private void menuItemPasswordChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemPasswordChangeActionPerformed
        PasswordChange pwChange = new PasswordChange(this, true);
        pwChange.setVisible(true);        
    }//GEN-LAST:event_menuItemPasswordChangeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQuickSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuItemCategories;
    private javax.swing.JMenuItem menuItemClose;
    private javax.swing.JMenuItem menuItemHardware;
    private javax.swing.JMenuItem menuItemMenuNewCategory;
    private javax.swing.JMenuItem menuItemMenuNewHardware;
    private javax.swing.JMenuItem menuItemMenuNewUser;
    private javax.swing.JMenu menuItemNew;
    private javax.swing.JMenuItem menuItemPasswordChange;
    private javax.swing.JMenuItem menuItemUsers;
    private javax.swing.JMenu menuMenu;
    private javax.swing.JMenu menuPreferences;
    private javax.swing.JPanel panelData;
    private javax.swing.JPanel panelResults;
    private javax.swing.JPanel panelSearch;
    private javax.swing.JPanel panelStatus;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JSeparator seperaterStatus;
    private javax.swing.JTextField txtSearchAttribute;
    // End of variables declaration//GEN-END:variables

}
